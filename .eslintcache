[{"/Users/allangallo/Documents/projects/riasam/client/src/index.js":"1","/Users/allangallo/Documents/projects/riasam/client/src/App.js":"2","/Users/allangallo/Documents/projects/riasam/client/src/reportWebVitals.js":"3","/Users/allangallo/Documents/projects/riasam/client/src/components/SideMenu.js":"4","/Users/allangallo/Documents/projects/riasam/client/src/pages/Login.js":"5","/Users/allangallo/Documents/projects/riasam/client/src/util/hooks.js":"6","/Users/allangallo/Documents/projects/riasam/client/src/util/init-firebase.js":"7","/Users/allangallo/Documents/projects/riasam/client/src/context/auth.js":"8","/Users/allangallo/Documents/projects/riasam/client/src/util/AuthRoute.js":"9","/Users/allangallo/Documents/projects/riasam/client/src/pages/Home.js":"10","/Users/allangallo/Documents/projects/riasam/client/src/components/Concept.js":"11","/Users/allangallo/Documents/projects/riasam/client/src/components/TableIncomeAndDicount.js":"12"},{"size":500,"mtime":1609801462369,"results":"13","hashOfConfig":"14"},{"size":830,"mtime":1610519373981,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609188436964,"results":"16","hashOfConfig":"14"},{"size":667,"mtime":1609913937917,"results":"17","hashOfConfig":"14"},{"size":1798,"mtime":1609920562789,"results":"18","hashOfConfig":"14"},{"size":505,"mtime":1610384809672,"results":"19","hashOfConfig":"14"},{"size":923,"mtime":1609913786667,"results":"20","hashOfConfig":"14"},{"size":3062,"mtime":1609980049349,"results":"21","hashOfConfig":"14"},{"size":452,"mtime":1609979981191,"results":"22","hashOfConfig":"14"},{"size":11326,"mtime":1610529707946,"results":"23","hashOfConfig":"14"},{"size":2513,"mtime":1610478099813,"results":"24","hashOfConfig":"14"},{"size":1357,"mtime":1610525445263,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"k6ssif",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/allangallo/Documents/projects/riasam/client/src/index.js",[],["56","57"],"/Users/allangallo/Documents/projects/riasam/client/src/App.js",[],"/Users/allangallo/Documents/projects/riasam/client/src/reportWebVitals.js",[],"/Users/allangallo/Documents/projects/riasam/client/src/components/SideMenu.js",["58","59"],"/Users/allangallo/Documents/projects/riasam/client/src/pages/Login.js",["60","61"],"import React, { useState } from 'react'\nimport { Button, Form } from \"semantic-ui-react\";\n\nimport { useForm } from \"../util/hooks\";\nimport { auth } from \"../util/init-firebase\";\n\nfunction Login() {\n\n    const [errors, setErrors] = useState({});\n\n    const { onChange, onSubmit, values } = useForm(loginUserCallback,\n        {\n            username: '',\n            password: ''\n        });\n\n    function loginUserCallback () {\n        authentication({...values});\n    }\n\n    function authentication({username, password}) {\n        auth.signInWithEmailAndPassword(username, password)\n            .then( (user) => {\n                console.log(user)\n            })\n            .catch( (error) => {\n                console.error(error);\n            });\n    }\n\n    \n    return (\n        <div className=\"form-container\">\n            <Form onSubmit={onSubmit} \n                noValidate\n                >\n                    <h1>Iniciar Sesion</h1>\n                    <Form.Input \n                    \n                        label=\"Correo\"\n                        placeholder=\"Correo...\"\n                        name=\"username\"\n                        type=\"text\"\n                        value={values.username}\n                        onChange={onChange}\n                    />\n\n                    <Form.Input\n                        label=\"Contraseña\"\n                        placeholder=\"Contraseña...\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={values.password}\n                        onChange={onChange}\n                    />\n\n                    <Button type=\"submit\" primary>\n                        Iniciar Sesion\n                    </Button>\n            </Form>            \n        </div>\n    )\n}\n\nexport default Login;","/Users/allangallo/Documents/projects/riasam/client/src/util/hooks.js",[],"/Users/allangallo/Documents/projects/riasam/client/src/util/init-firebase.js",[],"/Users/allangallo/Documents/projects/riasam/client/src/context/auth.js",["62","63","64","65"],"import React, { useState, useMemo, useReducer, createContext, useEffect } from 'react'\nimport { firestore } from \"../util/init-firebase\";\n\nconst initialState = {\n    user: null,\n    incomesCatalog: [],\n    discountsCatalog: []\n}\n\ninitialState.user = localStorage.getItem('user') ? localStorage.getItem('user') : null;\n\nconst AuthContext = createContext({\n    user: null,\n    incomesCatalog: [],\n    discountsCatalog: [],\n    login: (userData) => {},\n    logout: () => {}\n})\n\nfunction authReducer(state, action) {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                user: action.payload\n            }\n            \n            break;\n        case 'LOGOUT':\n            return {\n                ...state,\n                user: null\n            }\n        default:\n            return state;\n            break;\n    }\n}\n\nexport function AuthProvider (props){\n    const [state, dispatch ] = useReducer(authReducer, initialState);\n    const [discountsCatalog, setDiscountsCatalog] = useState([]);\n    const [incomesCatalog, setIncomesCatalog] = useState([]);\n\n    useEffect(() => {\n            //incomes\n            firestore.collection(\"incomes\")\n            .onSnapshot((snapshot)=>{\n                snapshot.forEach((doc) => {\n\n                    setIncomesCatalog([\n                        ...incomesCatalog,\n                        {\n                            key: doc.id,\n                            text: doc.data().name,\n                            value: doc.id\n                        }\n                    ])                    \n                })\n            })\n\n            //discounts\n            firestore.collection(\"discounts\")\n                .onSnapshot((snapshot)=>{\n                    snapshot.forEach((doc) => {\n                        \n                            setDiscountsCatalog([\n                                ...discountsCatalog,\n                                {\n                                    key: doc.id,\n                                    text: doc.data().name,\n                                    value: doc.id    \n                                }\n                            ])\n                })\n            })\n    },[])\n\n    function login(userData){\n        localStorage.setItem('user', userData);\n        dispatch({\n            type: 'LOGIN',\n            payload: userData\n        });\n    }\n\n    function logout(){\n        localStorage.removeItem('user');\n        dispatch({type: 'LOGOUT'});\n    }\n\n    const value = useMemo(() => {\n        return ({\n            user: state.user, \n            login, \n            logout, \n            incomesCatalog: state.incomesCatalog, \n            discountsCatalog: state.discountsCatalog\n        })\n    }, [incomesCatalog,discountsCatalog])\n\n    return  <AuthContext.Provider value= {value} {...props} />\n}\n\nexport function useUsuario(){\n    const context = React.useContext(AuthContext);\n    if (!context){\n        throw new Error('useUsuario debe estar dentro del proveedor AuthContext');\n    }\n\n    return context;\n}","/Users/allangallo/Documents/projects/riasam/client/src/util/AuthRoute.js",["66"],"import React, { useContext } from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useUsuario } from \"../context/auth\";\n\nfunction AuthRoute({ component: Component, ...rest}) {\n    const { user } = useUsuario();\n\n    return (\n        <Route\n            { ...rest }\n            render ={ (props) =>\n                user ? <Redirect to=\"/login\" /> : <Component {...props} />\n            }\n        />\n    )\n}\n\nexport default AuthRoute\n","/Users/allangallo/Documents/projects/riasam/client/src/pages/Home.js",["67","68","69","70","71","72"],"/Users/allangallo/Documents/projects/riasam/client/src/components/Concept.js",["73"],"import React, { useState } from 'react'\nimport { Form, Button, Message } from \"semantic-ui-react\";\n\n\nimport { useUsuario } from \"../context/auth\";\nimport { useForm } from \"../util/hooks\";\n\nfunction Concept({isDiscount, addConcept,data}) {\n    const [errorForm, setErrorForm] = useState(false);\n    const [errorInput, setErrorInput] = useState({\n        content: '',\n        header: '',\n        error: false\n    })\n    const { user } = useUsuario();\n\n    const { onChange, onSubmit, values } = useForm(AddConcepts,\n        {\n            concept: '',\n            quantity: 0\n        });\n\n    function AddConcepts(){\n        const type = isDiscount ? 'DISCOUNT' : 'INCOME';\n        let name ;\n        name = Array.isArray(data) ? data.find(concept => concept.value === values.concept) : {text:''};\n\n        if (values.concept === '' || values.quantity === 0)\n        {\n            setErrorInput({\n                content: 'Los campos son obligatorios',\n                header: 'Errores',\n                error: true\n            })\n\n            setErrorForm(true);\n\n            return;\n\n        }else{\n            setErrorForm(false);\n        }\n\n        addConcept({\n            id: values.concept,\n            name: name ? name.text : '',\n            quantity: values.quantity\n        }, type)\n    }\n\n        return (\n            <Form\n                onSubmit={onSubmit}\n                error={errorForm}\n                noValidate>\n\n                <Form.Group widths='equal'>\n\n                <Form.Dropdown\n                    name=\"concept\"\n                    error={errorForm}\n                    placeholder=\"Seleccionar\"\n                    onChange={onChange}\n                    selection\n                    options={ data }\n                    value={values.concept}\n                />\n                <Form.Input\n                    type=\"text\"\n                    error={errorForm}\n                    placeholder=\"Cantidad\"\n                    name=\"quantity\"\n                    value={values.quantity}\n                    onChange={onChange}\n                    required\n                    />\n                <Button type=\"submit\" icon=\"add\" />\n                </Form.Group>\n\n                {\n                    errorForm && <Message\n                                    error={errorForm}\n                                    content={errorInput.content}\n                                    header={errorInput.header}/>\n                }\n\n            </Form>\n        )\n\n}\n\nexport default Concept;\n","/Users/allangallo/Documents/projects/riasam/client/src/components/TableIncomeAndDicount.js",["74"],"import React from 'react'\nimport { Table } from \"semantic-ui-react\";\n\nfunction TableIncomeAndDicount({data}) {\n\n    const rows = data.map( concept => {\n        return (\n            <Table.Row key={concept.id}>\n                <Table.Cell>{concept.name}</Table.Cell>\n                <Table.Cell textAlign=\"center\" >{concept.quantity}</Table.Cell>\n            </Table.Row>\n        )\n    })\n\n    Array.prototype.sum = function (prop) {\n        var total = 0;\n        for ( var i = 0, _len = this.length; i < _len; i++ ) {\n            total += parseInt(this[i][prop]);\n        }\n        return total\n    }\n\n    const total = (\n        <Table.Row >\n            <Table.HeaderCell textAlign=\"center\"> Total </Table.HeaderCell>\n            <Table.HeaderCell textAlign=\"center\"> { data.sum('quantity') } </Table.HeaderCell>\n        </Table.Row>\n    )\n    return (\n        <Table fixed>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Concepto</Table.HeaderCell>\n                    <Table.HeaderCell textAlign=\"center\">Cantidad</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {rows}\n            </Table.Body>\n            <Table.Footer>\n                {total}\n            </Table.Footer>\n        </Table>\n    )\n}\n\nexport default TableIncomeAndDicount;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":2,"column":37,"nodeType":"81","messageId":"82","endLine":2,"endColumn":44},{"ruleId":"79","severity":1,"message":"84","line":9,"column":12,"nodeType":"81","messageId":"82","endLine":9,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":9,"column":20,"nodeType":"81","messageId":"82","endLine":9,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":28,"column":13,"nodeType":"88","messageId":"89","endLine":28,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":36,"column":13,"nodeType":"88","messageId":"89","endLine":36,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":77,"column":7,"nodeType":"92","endLine":77,"endColumn":9,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":100,"column":8,"nodeType":"92","endLine":100,"endColumn":41,"suggestions":"95"},{"ruleId":"79","severity":1,"message":"96","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":27},{"ruleId":"79","severity":1,"message":"96","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":37},{"ruleId":"79","severity":1,"message":"97","line":15,"column":13,"nodeType":"81","messageId":"82","endLine":15,"endColumn":17},{"ruleId":"79","severity":1,"message":"98","line":24,"column":9,"nodeType":"81","messageId":"82","endLine":24,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":90,"column":5,"nodeType":"101","messageId":"102","endLine":96,"endColumn":6},{"ruleId":"103","severity":1,"message":"104","line":266,"column":31,"nodeType":"105","messageId":"102","endLine":266,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":280,"column":31,"nodeType":"105","messageId":"102","endLine":280,"endColumn":33},{"ruleId":"79","severity":1,"message":"97","line":15,"column":13,"nodeType":"81","messageId":"82","endLine":15,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":15,"column":5,"nodeType":"101","messageId":"102","endLine":21,"endColumn":6},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'discountsCatalog' and 'incomesCatalog'. Either include them or remove the dependency array. You can also do a functional update 'setIncomesCatalog(i => ...)' if you only need 'incomesCatalog' in the 'setIncomesCatalog' call.","ArrayExpression",["108"],"React Hook useMemo has missing dependencies: 'state.discountsCatalog', 'state.incomesCatalog', and 'state.user'. Either include them or remove the dependency array.",["109"],"'useContext' is defined but never used.","'user' is assigned a value but never used.","'tableIncomes' is assigned a value but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [discountsCatalog, incomesCatalog]",{"range":"114","text":"115"},"Update the dependencies array to be: [state.user, state.incomesCatalog, state.discountsCatalog]",{"range":"116","text":"117"},[2218,2220],"[discountsCatalog, incomesCatalog]",[2749,2782],"[state.user, state.incomesCatalog, state.discountsCatalog]"]